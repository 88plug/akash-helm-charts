apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akash-node.fullname" . }}
  labels:
    {{- include "akash-node.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "akash-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "akash-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "akash-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ "/bin/sh" , "/config/run.sh" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AKASHD_DATA
              value: /data
            - name: AKASHD_RPC_LADDR
              value: "tcp://0.0.0.0:{{ .Values.akashd.ports.rpc }}"
            - name: AKASHD_P2P_SEEDS
              value: "{{- range $i,$p := .Values.node.peers }}{{if $i}},{{end}}{{ $p.id }}@{{ $p.name }}-akash-node:{{ $.Values.akashd.ports.p2p }}{{- end }}"
          ports:
            - containerPort: {{ .Values.akashd.ports.p2p }}
              name: akashd-p2p
            - containerPort: {{ .Values.akashd.ports.rpc }}
              name: akashd-rpc
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "akash-node.fullname" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "akash-node.fullname" . }}
