apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akash-node.fullname" . }}
  labels:
    {{- include "akash-node.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "akash-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "akash-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "akash-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ "/bin/sh" , "/config/run.sh" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AKASH_BOOT_KEYS
              value: /boot-keys
            - name: AKASH_MONIKER
              value: {{ .Values.akash_node.moniker }}
            - name: AKASH_NET
              value: {{ .Values.akash_node.net }}
            - name: AKASH_HOME
              value: {{ .Values.akash_node.home }}
            - name: AKASH_FROM
              value: {{ .Values.akash_node.from }}
            - name: AKASH_NODE
              value: {{ .Values.akash_node.node }}
            - name: AKASH_CHAIN_ID
              value: {{ .Values.akash_node.chain_id }}
            - name: AKASH_KEYRING_BACKEND
              value: {{ .Values.akash_node.keyring_backend }}
          ports:
            - containerPort: {{ .Values.akashd.ports.p2p }}
              name: akashd-p2p
            - containerPort: {{ .Values.akashd.ports.rpc }}
              name: akashd-rpc
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: keys
              mountPath: /boot-keys
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "akash-node.fullname" . }}-config
        - name: keys
          secret:
            secretName: {{ include "akash-node.fullname" . }}-keys
