apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "provider.fullname" . }}-boot
  namespace: {{ .Release.Namespace }}
data:
  run.sh: |
    #!/bin/bash

    set -x

    ##
    # Import key
    ##
    cat "$AKASH_BOOT_KEYS/key-pass.txt" | { cat ; echo ; } | /bin/akash --home="$AKASH_HOME" keys import --keyring-backend="$AKASH_KEYRING_BACKEND"  "$AKASH_FROM" "$AKASH_BOOT_KEYS/key.txt"

    ##
    # Create Provider
    ##
    cat <<EOT >> provider.yaml
    host: https://provider.{{ .Values.domain }}:8443
    attributes:
      - key: region
        value: russia
      - key: host
        value: akash
      - key: tier
        value: community
      - key: organization
        value: akash.network
    EOT
    yes | /bin/akash tx provider create provider.yaml --from $AKASH_FROM --home=$AKASH_HOME --keyring-backend=$AKASH_KEYRING_BACKEND --node=$AKASH_NODE --chain-id=$AKASH_CHAIN_ID --fees 5000uakt || true
    yes | /bin/akash tx provider update provider.yaml --from $AKASH_FROM --home=$AKASH_HOME --keyring-backend=$AKASH_KEYRING_BACKEND --node=$AKASH_NODE --chain-id=$AKASH_CHAIN_ID --fees 5000uakt || true
    yes | akash tx cert create server provider.{{ .Values.domain }} --chain-id $AKASH_CHAIN_ID --keyring-backend $AKASH_KEYRING_BACKEND --from $AKASH_FROM --home=$AKASH_HOME --node=$AKASH_NODE --fees 5000uakt

    ##
    # Run daemon
    ##
    /bin/akash --home="$AKASH_HOME" --node="$AKASH_NODE" --chain-id="$AKASH_CHAIN_ID" --keyring-backend="$AKASH_KEYRING_BACKEND" --from="$AKASH_FROM" provider run --cluster-k8s
